<launch>

<!--
  <include file="$(find arm_navigation_tests)/tests/motion_planners/common/motion_planning_common_right_arm.launch"/>
  <include file="$(find arm_navigation_tests)/tests/motion_planners/common/motion_planning_common_left_arm.launch"/>
-->

  <!-- load perception -->
  <include file="$(find pr2_arm_navigation_perception)/launch/laser-perception.launch"/>

  <!-- load move_arm -->
<!--  <include file="$(find pr2_arm_navigation_actions)/launch/move_right_arm.launch"/>
  <include file="$(find pr2_arm_navigation_actions)/launch/move_left_arm.launch"/>
-->

  <!-- load planning_environment -->
  <include file="$(find pr2_arm_navigation_actions)/launch/environment_server.launch"/> 

  <!-- load filters -->
<!--  <include file="$(find pr2_arm_navigation_filtering)/launch/trajectory_filter.launch"/> -->

  <node machine="c2" pkg="trajectory_filter_server" name="trajectory_filter" type="trajectory_filter_server" output="screen">
    <rosparam command="load" file="$(find pr2_arm_navigation_config)/config/joint_limits.yaml"/>
    <rosparam command="load" file="$(find sbpl_two_arm_planner_node)/config/simple_filters.yaml"/>

    <remap from="robot_description" to="robot_description" />
    <remap from="collision_map" to="collision_map_occ" />
    <remap from="collision_map_update" to="collision_map_occ_update" />
    <param name="refresh_interval_collision_map" type="double" value="0.0" />
    <param name="refresh_interval_kinematic_state" type="double" value="1.0" />
    <param name="bounding_planes" type="string" value="0 0 1 -0.01" />
    <param name="compute_contacts" type="bool" value="false" />

    <param name="pointcloud_padd" type="double" value="0.00" />

    <rosparam command="load" file="$(find pr2_arm_navigation_config)/config/robot_padding.yaml" />

  </node>

  <!-- load ik -->
  <include file="$(find pr2_arm_navigation_kinematics)/launch/right_arm_collision_free_ik.launch"/>
  <include file="$(find pr2_arm_navigation_kinematics)/launch/left_arm_collision_free_ik.launch"/>
    
  <!-- Just so we can switch to the 2 arm controller later on -->
  <rosparam command="load" file="$(find sbpl_two_arm_planner_node)/config/pr2_both_arms_controller.yaml" />

  <!-- Nodes on top of the controllers -->
  <group ns="both_arms_controller">
    <node name="joint_trajectory_action_node" pkg="joint_trajectory_action" type="joint_trajectory_action" />
  </group>

  <node name="load_both_arms_controller" pkg="pr2_controller_manager" type="pr2_controller_manager" output="screen" args="load both_arms_controller" />

</launch>

